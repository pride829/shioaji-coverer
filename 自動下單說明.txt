# Shioaji Auto Order使用說明

## 環境需求：
* Python 3.6-3.8
* Shioaji

## 環境設置：

執行Anaconda prompt。

Touchance Python API需要安裝zmq，使用指令：
```pip install pyzmq```
安裝。

***Touchance Python API需要Touchance app執行中才能使用，如果Touchance被自動登出，有可能會抓不到資料。***

在shioaji-coverer資料夾底下建立account/account_info.json。這個檔案會存放帳號密碼，範例可見account_info.json.example

將憑證檔案(Sinopac.pfx)放到C:\sinopac底下。

cd至shioaji-coverer資料夾底下，執行
```python shioaji_auto_order.py```

## 程式設置：

Shioaji Auto Order和Shioaji Coverer一樣會讀取config.json，不同之處在於它讀取的是期貨代碼以及自動下單的判斷點位。

在config.json中設置：

future_name：會下單的商品。TXF代表台指期，MXF代表小台期。如果偵測到在小那斯達克期貨指數有較大的波動，永豐金api就會在指定的期貨下單。
註：小那斯達克期貨指數來自Touchance所獲取的芝加哥商業交易所底下的小那斯達底下最新的期貨合約。

如果auto_recent_future設置為True，程式會自動抓取最近一期的合約；如果為False，程式則會設定future_code為合約。如果auto_recent_future為True，則程式會忽略future_code。

order_quantity: 下單口數

auto_order_consec_tick: 程式最多會判斷幾個tick之內是否有大漲或大跌的行為。
auto_order_time為判斷價格是否劇烈波動的最小時間區間。
auto_buy_trigger為判斷價格是否劇漲的價位。
auto_sell_trigger為判斷價格是否劇跌的價位。
auto_order_time_report: 程式自動回報時間和價格的秒數。

auto_order_testing_day & auto_order_testing_night：設置是否要真的成交。如果為true，那麼Shioaji Auto Order會在日盤或夜盤觸發下單時印出Testing訊息，但不會真的成交。沒開盤的時候永遠都只會是Testing訊息。

## 程式邏輯：
	
紀錄過去auto_order_consec_tick秒內的價格，如果過去n個tick皆為上漲/下跌，且上漲/下跌幅度每個tick都比前一個tick更大，且這n個tick的時間差在auto_order_time之內，則會下單。

如果觸發下單，則會清空價格紀錄，以防錯誤的連續下單。
	
如果目前有偵測到的部位，則會等手上沒有部位之後，才會下單。
	
	
	
	
	